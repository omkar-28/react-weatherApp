{"version":3,"sources":["Components/Layouts/SearchBar.js","Components/Layouts/Header.js","utils/helper.js","Components/weatherData/City.js","Components/weatherData/Forecast.js","Components/Layouts/DegreeType.js","Components/weatherData/Result.js","Components/Layouts/Loader.js","Components/Layouts/Error.js","App.js","index.js"],"names":["SearchBar","value","change","submit","onSubmit","className","type","name","onChange","placeholder","Header","React","memo","console","log","href","convertCtoF","parseInt","City","weatherInfo","degreetype","city","country","date","icon","description","highTemp","lowTemp","humidity","temp","wind","sunrise","sunset","src","alt","Math","round","Forecast","forecast","dailyData","filter","item","dt_txt","includes","map","key","dt","weather","main","DegreeType","updateDegree","id","checked","htmlFor","Result","classFade","Loader","Fragment","Error","App","state","error","fetching","handleInputChange","e","setState","target","SearchCity","a","preventDefault","OWMKEY","process","WEATHER_API_KEY","axios","get","data","res","data1","months","days","currentdate","Date","getDay","getDate","getMonth","sys","toLocaleTimeString","slice","temp_min","temp_max","speed","list","setTimeout","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb6bdb56.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchBar = ({ value, change, submit }) => {\r\n  return (\r\n    <form onSubmit={submit} className=\"fadeIn\">\r\n      <span>\r\n        <i className=\"fa fa-search\"></i>\r\n      </span>\r\n      <input\r\n        className=\"searchbar\"\r\n        type=\"text\"\r\n        name=\"city\"\r\n        value={value}\r\n        onChange={change}\r\n        placeholder=\"Search By City...\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nconst Header = React.memo(() => {\r\n  console.log(\"header\");\r\n  return (\r\n    <header className=\"fadeIn\">\r\n      <div className=\"container\">\r\n        <a href=\"https://github.com/omkar-28\">\r\n          <i className=\"fa fa-github\"></i>\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/omkar-khatavkar-bb7051117/\">\r\n          <i className=\"fa fa-linkedin\"></i>\r\n        </a>\r\n      </div>\r\n    </header>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","export const convertCtoF = (value) => {\r\n  return (parseInt(value) * 9) / 5 + 32;\r\n};\r\n","import React from \"react\";\r\nimport { convertCtoF } from \"../../utils/helper\";\r\n\r\nconst City = ({ weatherInfo, degreetype }) => {\r\n  const {\r\n    city,\r\n    country,\r\n    date,\r\n    icon,\r\n    description,\r\n    highTemp,\r\n    lowTemp,\r\n    humidity,\r\n    temp,\r\n    wind,\r\n    sunrise,\r\n    sunset,\r\n  } = weatherInfo;\r\n\r\n  return (\r\n    <div className=\"card-body\">\r\n      <div className=\"card-head\">\r\n        <h3>\r\n          {city}, {country}\r\n        </h3>\r\n        <p>{date}</p>\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <div className=\"current-city\">\r\n          <img\r\n            src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n            alt=\"icon\"\r\n          />\r\n          <h4>\r\n            <span>{description}</span>\r\n            {degreetype === \"celsius\"\r\n              ? Math.round(temp)\r\n              : convertCtoF(Math.round(temp))}\r\n            &#176; {degreetype === \"celsius\" ? \"C\" : \"F\"}\r\n          </h4>\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            {wind} mph\r\n            <br /> Wind\r\n          </li>\r\n          <li>\r\n            {highTemp}\r\n            <br /> High\r\n          </li>\r\n          <li>\r\n            {lowTemp}\r\n            <br /> Low\r\n          </li>\r\n          <li>\r\n            {sunrise}\r\n            <br /> Sunrise\r\n          </li>\r\n          <li>\r\n            {sunset}\r\n            <br /> Sunset\r\n          </li>\r\n          <li>\r\n            {humidity} %\r\n            <br /> Rain\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default City;\r\n","import React from \"react\";\r\nimport { convertCtoF } from \"../../utils/helper\";\r\n\r\nconst Forecast = React.memo(({ forecast, degreetype }) => {\r\n  const dailyData = forecast.filter((item) => item.dt_txt.includes(\"18:00:00\"));\r\n\r\n  return (\r\n    <div className=\"col-6 forcast\">\r\n      <h2>Forecast</h2>\r\n      <ul>\r\n        {dailyData.map((item) => (\r\n          <li key={item.dt}>\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`}\r\n              alt=\"cloud\"\r\n            />\r\n            <p>\r\n              {degreetype === \"celsius\"\r\n                ? Math.round(item.main.temp)\r\n                : convertCtoF(Math.round(item.main.temp))}\r\n              &#176; {degreetype === \"celsius\" ? \"C\" : \"F\"}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Forecast;\r\n","import React from \"react\";\r\n\r\nconst DegreeType = ({ degreetype, updateDegree }) => {\r\n  return (\r\n    <div className=\"degree\">\r\n      <div className=\"custom-radio\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"degree-type\"\r\n          value=\"celsius\"\r\n          id=\"celsius\"\r\n          onChange={updateDegree}\r\n          checked={degreetype === \"celsius\"}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"celsius\">\r\n          Celsius\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"custom-radio\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"degree-type\"\r\n          value=\"fahrenheit\"\r\n          id=\"fahrenheit\"\r\n          onChange={updateDegree}\r\n          checked={degreetype === \"fahrenheit\"}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"fahrenheit\">\r\n          Farenheit\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DegreeType;\r\n","import React from \"react\";\r\nimport City from \"./City\";\r\nimport Forecast from \"./Forecast\";\r\nimport DegreeType from \"../Layouts/DegreeType\";\r\n\r\nconst Result = React.memo(({ weatherInfo, degreetype, updateDegree }) => {\r\n  const { forecast } = weatherInfo;\r\n  let classFade = \"\";\r\n  if (weatherInfo) {\r\n    classFade = \"fadeIn\";\r\n  }\r\n  return (\r\n    <div className={classFade}>\r\n      <DegreeType degreetype={degreetype} updateDegree={updateDegree} />\r\n      <div className=\"city-card\">\r\n        <City weatherInfo={weatherInfo} degreetype={degreetype} />\r\n        <Forecast forecast={forecast} degreetype={degreetype} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\n\r\nfunction Loader({ value }) {\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className={value ? \"fetching fadeIn\" : \"fetching\"}>\r\n        hold on while we fetch weatherInfo for {value} city\r\n      </h2>\r\n      <div className=\"pulseLoader\"></div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className=\"error fadeIn\">Sorry, the specified City was not found</div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { Fragment, Component } from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./Components/Layouts/SearchBar\";\nimport Header from \"./Components/Layouts/Header\";\nimport Result from \"./Components/weatherData/Result\";\nimport axios from \"axios\";\nimport Loader from \"./Components/Layouts/Loader\";\nimport Error from \"./Components/Layouts/Error\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    weatherInfo: null,\n    error: false,\n    fetching: false,\n    degreetype: \"celsius\",\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  SearchCity = async (e) => {\n    e.preventDefault();\n    const { value } = this.state;\n    this.setState({ fetching: true, weatherInfo: null, error: false });\n\n    let OWMKEY;\n    if (process.env.NODE_ENV !== \"production\") {\n      OWMKEY = process.env.REACT_APP_WEATHER_API_KEY;\n    } else {\n      OWMKEY = process.env.WEATHER_API_KEY;\n    }\n\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${OWMKEY}&units=metric`;\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${OWMKEY}&units=metric`;\n\n    try {\n      const { data } = await axios.get(weather);\n      const res = await axios.get(forecast);\n      const data1 = res.data;\n\n      const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"Nocvember\",\n        \"December\",\n      ];\n      const days = [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n      ];\n      const currentdate = new Date();\n\n      const date = `${days[currentdate.getDay()]}, ${currentdate.getDate()} ${\n        months[currentdate.getMonth()]\n      } `;\n\n      const sunrise = new Date(data.sys.sunrise * 1000)\n        .toLocaleTimeString()\n        .slice(0, 4);\n      const sunset = new Date(data.sys.sunset * 1000)\n        .toLocaleTimeString()\n        .slice(0, 4);\n      const weatherInfo = {\n        city: data.name,\n        country: data.sys.country,\n        description: data.weather[0].description,\n        main: data.weather[0].main,\n        temp: data.main.temp,\n        icon: data.weather[0].icon,\n        date,\n        sunrise,\n        sunset,\n        lowTemp: data.main.temp_min,\n        highTemp: data.main.temp_max,\n        humidity: data.main.humidity,\n        wind: data.wind.speed,\n        forecast: data1.list,\n      };\n\n      setTimeout(() => {\n        this.setState({ weatherInfo, fetching: false });\n      }, 5000);\n    } catch (error) {\n      console.log(\"city not found\");\n      this.setState({\n        error: true,\n        fetching: false,\n      });\n    }\n  };\n\n  updateDegree = (e) => {\n    this.setState({\n      degreetype: e.target.value,\n    });\n  };\n\n  render() {\n    const { value, weatherInfo, error, fetching, degreetype } = this.state;\n\n    return (\n      <Fragment>\n        <Header />\n        <div className=\"container\">\n          <h1 className=\"pt-3 title fadeIn\">WEATHER FORECAST</h1>\n\n          <SearchBar\n            submit={this.SearchCity}\n            value={value}\n            change={this.handleInputChange}\n          />\n        </div>\n        <div className=\"container\">\n          {fetching && <Loader value={value} />}\n          {weatherInfo && (\n            <Result\n              weatherInfo={weatherInfo}\n              error={error}\n              degreetype={degreetype}\n              updateDegree={this.updateDegree}\n            />\n          )}\n          {error && <Error />}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}